<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Colours -->

    <Color x:Key="ForegroundColor">#c6dfe8</Color>
    <Color x:Key="TitleBackgroundColor">#323335</Color>
    <Color x:Key="BackgroundColor">#DFDFDF</Color>

    <Color x:Key="ButtonColor">#3C659E</Color>
    
    <!-- Brushes -->

    <SolidColorBrush Color ="#C6DFE8" x:Key="ForegroundBrush"/>
    <SolidColorBrush Color ="#323335" x:Key="TitleBackgroundBrush"/>
    <SolidColorBrush Color ="#DFDFDF" x:Key="BackgroundBrush"/>


    <SolidColorBrush Color ="#8AA9D3" x:Key="ButtonBrush2"/>
    <SolidColorBrush Color ="#5B81B5" x:Key="ButtonBrush1"/>
    <SolidColorBrush Color ="#3C659E" x:Key="ButtonBrush0"/>
    <SolidColorBrush Color ="#235292" x:Key="ButtonBrush-1"/>
    <SolidColorBrush Color ="#143B72" x:Key="ButtonBrush-2"/>



    <LinearGradientBrush x:Key="LinearBrush1" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#DDDDEE" Offset="0" />
        <GradientStop Color="#EEEEFF" Offset="0.2" />
        <GradientStop Color="#EEEEFF" Offset="0.8" />
        <GradientStop Color="#DDDDEE" Offset="1" />
    </LinearGradientBrush>

    <Style x:Key="WindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Black"/>
    </Style>

    <Style x:Key="TitleBarStyle" TargetType="{x:Type DockPanel}">
        <Setter Property="Background" Value="{DynamicResource TitleBackgroundBrush}" />
    </Style>

    <Style x:Key="TitleBarLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="Background" Value="{DynamicResource TitleBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="6,5,0,0"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style x:Key="GridStyle" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{DynamicResource TitleBackgroundBrush}" />
    </Style>

    <Style x:Key="DockPanelStyle" TargetType="{x:Type DockPanel}">
        <Setter Property="Background" Value="{DynamicResource TitleBackgroundBrush}" />
    </Style>

    <Style x:Key="MenuStyle" TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{DynamicResource TitleBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
    </Style>

    <Style x:Key="MenuItemStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="{DynamicResource TitleBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="Padding" Value="6,5,6,5" />
        <Setter Property="Margin" Value="0"/>
    </Style>


    <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">

    </Style>

    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource ButtonBrush-1}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border"
                       BorderThickness="1"
                       Padding="5"
                       BorderBrush="{DynamicResource TitleBackgroundBrush}"
                       CornerRadius="0"
                       Margin="0"
                       Background="{TemplateBinding Background}">  

                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonBrush0}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonBrush-2}"/>
                <Setter Property="Foreground" Value="{DynamicResource ButtonBrush2}"></Setter>
                <Setter Property="RenderTransform" >
                    <Setter.Value>
                        <TranslateTransform Y="1.0" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="FontWeight" Value="Bold"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LabelStyle" TargetType="{x:Type Label}">

    </Style>

    <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">

    </Style>



    <Style x:Key="StatusBarStyle" TargetType="{x:Type StatusBar}">
        <Setter Property="Background" Value="{DynamicResource TitleBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="BorderThickness" Value="0,1,0,0"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TitleBackgroundBrush}"/>
        
    </Style>

    <Style x:Key="StatusBarItemStyle" TargetType="{x:Type StatusBarItem}">
        
    </Style>

</ResourceDictionary>