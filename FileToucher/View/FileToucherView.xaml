<Window x:Class="FileToucher.View.FileToucherView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:FileToucher"
        xmlns:viewModel="clr-namespace:FileToucher.ViewModel"
        xmlns:view="clr-namespace:FileToucher.View"
        mc:Ignorable="d"
        Name="Win"
        Title="File Toucher 0.3"
        WindowStyle="None"
        AllowsTransparency="True"
        ResizeMode="CanResizeWithGrip"
        WindowStartupLocation="CenterScreen"
        Style="{StaticResource WindowStyle}"
        Height="400" Width="800" MinHeight="400" MinWidth="750"
        SourceInitialized="Window_SourceInitialized">

    <WindowChrome.WindowChrome>
        <WindowChrome 
        CaptionHeight="5"
        ResizeBorderThickness="5" />
    </WindowChrome.WindowChrome>

    <Window.DataContext>
        <viewModel:FileToucherViewModel/>
    </Window.DataContext>

    <Window.CommandBindings>
        <CommandBinding Command="{x:Static view:FileToucherView.OpenCommand}" Executed="OpenClicked"/>
        <CommandBinding Command="{x:Static view:FileToucherView.SaveCommand}" Executed="SaveClicked"/>
    </Window.CommandBindings>

    <DockPanel>

        <Grid DockPanel.Dock="Top" Style="{StaticResource GridStyle}" MouseLeftButtonDown="TitleBarMouseLeftButtonDown" MouseLeftButtonUp="TitleBarMouseLeftButtonUp" MouseMove="TitleBarMouseMove">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Label Grid.Row="0" Grid.Column="0"  Content="File Toucher 0.3" Style="{StaticResource TitleBarLabelStyle}"/>

            <Button Width="32" Grid.Row="0" Grid.Column="2" Style="{StaticResource TitleBarButtonStyle}" Click="MinimizeButton_Click">
                <Image Source="..\Resources\MinimizeButton.png" Width="16" Height="16"/>
            </Button>
            <Button Width="32" Grid.Row="0" Grid.Column="3" Style="{StaticResource TitleBarButtonStyle}" Click="RestoreButton_Click">
                <Image Name="RestoreButtonImage" Source="..\Resources\MaximizeButton.png" Width="16" Height="16"/>
            </Button>
            <Button Width="32" Grid.Row="0" Grid.Column="4" Style="{StaticResource TitleBarButtonStyle}" Margin="3,6,6,0" Command="{Binding ExitClicked}">
                <Image Source="..\Resources\CloseButton.png" Width="16" Height="16"/>
            </Button>

        </Grid>

        <Menu Style="{StaticResource MenuStyle}" DockPanel.Dock="Top" Height="Auto" BorderBrush="#aaaaaa" BorderThickness="0,0,0,1" VerticalAlignment="Top">
            <MenuItem Style="{StaticResource MenuItemStyle}" Header="_File">
                <MenuItem Header="_Open File List" Style="{StaticResource SubMenuItemStyle}" InputGestureText="Ctrl+O" Click="OpenClicked"/>
                <MenuItem Header="_Save File List" Style="{StaticResource SubMenuItemStyle}" InputGestureText="Ctrl+S" Click="SaveClicked"/>
                <MenuItem Header="_Exit" Style="{StaticResource SubMenuItemStyle}" InputGestureText="Alt+F4" Command="{Binding ExitClicked}"/>
            </MenuItem>
            <MenuItem Style="{StaticResource MenuItemStyle}" Header="_Help">
                <MenuItem Header="_About" Style="{StaticResource SubMenuItemStyle}" Command="{Binding AboutClicked}"/>
            </MenuItem>
        </Menu>

        <StatusBar Style="{StaticResource StatusBarStyle}" DockPanel.Dock="Bottom" HorizontalAlignment="Stretch">
            <StatusBarItem Style="{StaticResource StatusBarItemStyle}">
                <TextBlock Name="StatusBarText" Text="{Binding StatusBarText}" />
            </StatusBarItem>
        </StatusBar>

        <Grid DockPanel.Dock="Bottom" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" MinHeight="70" Margin="10,5,10,10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>


            <CheckBox IsChecked="{Binding Path=AccessedCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Margin="4"/>
            <CheckBox IsChecked="{Binding Path=ModifiedCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="2" Grid.Column="1" VerticalAlignment="Center" Margin="4"/>
            <CheckBox IsChecked="{Binding Path=CreatedCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="3" Grid.Column="1" VerticalAlignment="Center" Margin="4"/>

            <Label Grid.Row="0" Grid.Column="2" Content="Attributes to set" FontWeight="Bold"  VerticalAlignment="Center" Padding="0" Margin="0,5,15,0"/>
            <Label Grid.Row="1" Grid.Column="2" Content="Last Accessed On"  VerticalAlignment="Center" Padding="0" Margin="0,0,5,0"/>
            <Label Grid.Row="2" Grid.Column="2" Content="Last Modified On"  VerticalAlignment="Center" Padding="0" Margin="0,0,5,0"/>
            <Label Grid.Row="3" Grid.Column="2" Content="Created On"  VerticalAlignment="Center" Padding="0" Margin="0,0,5,0"/>

            <Label Grid.Row="0" Grid.Column="3" Content="Date and Time to set" FontWeight="Bold" VerticalAlignment="Center" Padding="0" Margin="5,5,0,0"/>

            <StackPanel Grid.Row="1" Grid.Column="3" Orientation="Horizontal" Height="Auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <xctk:DateTimePicker x:Name="AccessedDate" IsEnabled="{Binding Path=AccessedDateTimeEnable, UpdateSourceTrigger=PropertyChanged}"  Text="{Binding Path=AccessedDateTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinWidth="250" VerticalAlignment="Center" Margin="4"/>
                <CheckBox x:Name="CheckboxAccessedNow" IsEnabled="{Binding Path=AccessedNowCheckboxEnable, UpdateSourceTrigger=PropertyChanged}" IsChecked="{Binding Path=AccessedNowCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Content="Current Time" VerticalAlignment="Center" Margin="4,4,2,4"/>
            </StackPanel>

            <StackPanel Grid.Row="2" Grid.Column="3" Orientation="Horizontal" Height="Auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <xctk:DateTimePicker x:Name="ModifiedDate" IsEnabled="{Binding Path=ModifiedDateTimeEnable, UpdateSourceTrigger=PropertyChanged}" Text="{Binding Path=ModifiedDateTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinWidth="250" VerticalAlignment="Center" Margin="4"/>
                <CheckBox x:Name="CheckboxModifiedNow" IsEnabled="{Binding Path=ModifiedNowCheckboxEnable, UpdateSourceTrigger=PropertyChanged}" IsChecked="{Binding Path=ModifiedNowCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Content="Current Time" VerticalAlignment="Center" Margin="4,4,2,4"/>
            </StackPanel>

            <StackPanel Grid.Row="3" Grid.Column="3" Orientation="Horizontal" Height="Auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <xctk:DateTimePicker x:Name="CreatedDate" IsEnabled="{Binding Path=CreatedDateTimeEnable, UpdateSourceTrigger=PropertyChanged}" Text="{Binding Path=CreatedDateTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinWidth="250" VerticalAlignment="Center" Margin="4"/>
                <CheckBox x:Name="CheckboxCreatedNow" IsEnabled="{Binding Path=CreatedNowCheckboxEnable, UpdateSourceTrigger=PropertyChanged}" IsChecked="{Binding Path=CreatedNowCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Content="Current Time" VerticalAlignment="Center" Margin="4,4,2,4"/>
            </StackPanel>



            <Button Style="{StaticResource ButtonStyle}" Grid.Row="0" Grid.Column="4" Grid.RowSpan="4" Width="200" Margin="15,5,0,0" Padding="3" FontSize="16" Command="{Binding TouchFilesClicked}">Touch Files</Button>

        </Grid>

        <StackPanel Height="Auto" DockPanel.Dock="Right" VerticalAlignment="Stretch" MinWidth="150">
            <Button Margin="5,10,10,5" Style="{StaticResource ButtonStyle}" Click="AddFilesClicked">Add Files</Button>
            <Button Margin="5,5,10,5" Style="{StaticResource ButtonStyle}" Click="AddDirectoryClicked">Add Directory</Button>
            <Button Margin="5,15,10,5" Style="{StaticResource ButtonStyle}" Command="{Binding RemoveSelectedClicked}">Remove Selected</Button>
            <Button Margin="5,5,10,5" Style="{StaticResource ButtonStyle}" Command="{Binding RemoveAllClicked}">Remove All</Button>
        </StackPanel>

        <local:CustomDataGrid x:Name="FilesDataGrid" ItemsSource="{Binding SelectedTouchFiles, UpdateSourceTrigger=PropertyChanged}" DockPanel.Dock="Left" SelectedItemsList="{Binding SelectedRows, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Stretch" AutoGenerateColumns="false" IsReadOnly="true" Margin="10,10,0,0" Padding="0">
            <local:CustomDataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Filename}" Header="Filename" />
                <DataGridTextColumn Binding="{Binding Directory}" Header="Directory" />
                <DataGridTextColumn Binding="{Binding AccessedOn, StringFormat=\{0:dd MMM yyyy HH:mm:ss\}}" Header="Accessed On">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Error}" Value="True">
                                    <Setter Property="Foreground" Value="#FFBBBB"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding ModifiedOn, StringFormat=\{0:dd MMM yyyy HH:mm:ss\}}" Header="Modified On">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Error}" Value="True">
                                    <Setter Property="Foreground" Value="#FFBBBB"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CreatedOn, StringFormat=\{0:dd MMM yyyy HH:mm:ss\}}" Header="Created On">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Error}" Value="True">
                                    <Setter Property="Foreground" Value="#FFBBBB"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding Extension}" Header="File Extension" />
            </local:CustomDataGrid.Columns>
            <local:CustomDataGrid.Resources>
                <Style TargetType="{x:Type DataGridRow}" >
                    <Setter Property="Background" Value="White"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Error}" Value="True">
                            <Setter Property="Background" Value="#FFBBBB"/>
                            <Setter Property="ToolTip" Value="Error: File not found/accessible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </local:CustomDataGrid.Resources>
        </local:CustomDataGrid>

    </DockPanel>
</Window>